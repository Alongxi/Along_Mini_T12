/*********************************************************************************************************************
 * COPYRIGHT NOTICE
 * Copyright (c) 2018,逐飞科技
 * All rights reserved.
 * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
 *
 * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
 * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
 *
 * @file       		MPU6050
 * @company	   		成都逐飞科技有限公司
 * @author     		逐飞科技(QQ3184284598)
 * @version    		查看doc内version文件 版本说明
 * @Software 		IAR 8.3 or MDK 5.28
 * @Taobao   		https://seekfree.taobao.com/
 * @date       		2019-04-30
 * @note		
					接线定义：
					------------------------------------ 
						软件IIC
                        SCL                 查看SEEKFREE_IIC文件内的SEEKFREE_SCL宏定义
						SDA                 查看SEEKFREE_IIC文件内的SEEKFREE_SDA宏定义  
					------------------------------------ 
 ********************************************************************************************************************/



#ifndef _SEEKFREE_MPU6050_h
#define _SEEKFREE_MPU6050_h

#include "common.h"

#define OLED_CMD  0	//写命令
#define OLED_DATA 1	//写数据
#define OLED_MODE 0

#define OLED_ADDRESS        (0x78>>1)  //OLED地址
#define OLED_ADDRESS_LEN  1         //MPU6050地址长度
//OLED模式设置
//0:4线串行模式
//1:并行8080模式

#define SIZE 16
#define XLevelL		0x02
#define XLevelH		0x10
#define Max_Column	128
#define Max_Row		64
#define	Brightness	0xFF 
#define X_WIDTH 	128
#define Y_WIDTH 	64	

// 定义MPU6050内部地址

#define	MPU6050_DEV_ADDR	    0xD0>>1	//IIC写入时的地址字节数据，+1为读取

#define	SMPLRT_DIV				0x19	//陀螺仪采样率，典型值：0x07(125Hz)
#define	MPU6050_CONFIG          0x1A	//低通滤波频率，典型值：0x06(5Hz)
#define	GYRO_CONFIG				0x1B	//陀螺仪自检及测量范围，典型值：0x18(不自检，2000deg/s)
#define	ACCEL_CONFIG	        0x1C	//加速计自检、测量范围及高通滤波频率，典型值：0x01(不自检，2G，5Hz)
#define INT_PIN_CFG	  			0x37    //设置6050辅助I2C为直通模式寄存器
#define	ACCEL_XOUT_H	        0x3B
#define	ACCEL_XOUT_L	        0x3C
#define	ACCEL_YOUT_H	        0x3D
#define	ACCEL_YOUT_L	        0x3E
#define	ACCEL_ZOUT_H	        0x3F
#define	ACCEL_ZOUT_L	        0x40
#define	GYRO_XOUT_H				0x43
#define	GYRO_XOUT_L				0x44	
#define	GYRO_YOUT_H				0x45
#define	GYRO_YOUT_L				0x46
#define	GYRO_ZOUT_H				0x47
#define	GYRO_ZOUT_L				0x48
#define User_Control 			0x6A    //关闭6050对辅助I2C设备的控制
#define	PWR_MGMT_1				0x6B	//电源管理，典型值：0x00(正常启用)
#define	WHO_AM_I				0x75	//IIC地址寄存器(默认数值0x68，只读)




extern int16 mpu_gyro_x,mpu_gyro_y,mpu_gyro_z;
extern int16 mpu_acc_x,mpu_acc_y,mpu_acc_z;

void  mpu6050_init(void);               //初始化MPU6050
void  mpu6050_get_accdata(void);
void  mpu6050_get_gyro(void);
void OLED_Init();
void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[]);
void OLED_ShowCHinese(uint8 x,uint8 y,uint8 no);
void OLED_ShowString(uint8 x,uint8 y,uint8 *chr,uint8 Char_Size);
void OLED_ShowNum(uint8 x,uint8 y,uint32 num,uint8 len,uint8 size2);
uint32 oled_pow(uint8 m,uint8 n);
void OLED_P8x16Str(uint8 x,uint8 y,uint8 ch[]);
void OLED_ShowChar(uint8 x,uint8 y,uint8 chr,uint8 Char_Size);
void OLED_On(void);
void OLED_Clear(void);
void OLED_Set_Pos(unsigned char x, unsigned char y);
void fill_picture(unsigned char fill_Data);
void Write_IIC_Data(unsigned char IIC_Data);

void OLED_P16x32Str(uint8 x, uint8 y, uint8 N);
void OLED_IMG24x24(uint8 x, uint8 y, uint8 N);
void fill_24x1(uint8 x, uint8 y);//清除24x1列
void fill_24x10(int8 x, int8 y);
void Draw_IMG24x24(int8 x, int8 y, uint8 N);
void Draw_IMG34x24(int8 x, int8 y, uint8 N);
void Draw_IMG42X32(int8 x, int8 y, uint8 N);
void show_IMG16x16(uint8 x, uint8 y, uint8 N);
void show_temp(uint8 x,uint16 temp);
void show_set_temp(uint8 x,uint8 y,uint16 temp);
void show_IMG56x8(uint8 x, uint8 y,uint8 percent);
void OLED_CH16Str(uint8 x,uint8 y,uint8 ch[]);
void OLED_Print(uint8 x, uint8 y, uint8 ch[]);
void Draw_IMG42X32_limit(int8 x, int8 y, uint8 N,uint8 mode);
void ROW_OLED_CH16Str(int8 x,int8 y,uint8 ch[]);//汉字滚动
void ROW_OLED_Print(int8 x, int8 y, uint8 ch[]);
void OLED_CH16_Str(uint8 x, uint8 y, uint8 N);
void OLED_CH16_Char(uint8 x, uint8 y,uint8 page_floor,uint8 page_one_numb,uint8 page_two_numb);


void OLED_WR_Byte(unsigned dat,unsigned cmd);
















#endif
