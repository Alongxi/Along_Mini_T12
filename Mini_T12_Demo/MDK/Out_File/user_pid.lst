C51 COMPILER V9.59.0.0   USER_PID                                                          07/02/2021 21:25:48 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE USER_PID
OBJECT MODULE PLACED IN .\Out_File\user_pid.obj
COMPILER INVOKED BY: D:\APPDATA\Keil\C51\BIN\C51.EXE ..\..\Libraries\User\user_pid.c LARGE OPTIMIZE(9,SPEED) BROWSE INCD
                    -IR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;..\USER\
                    -src;..\..\Libraries\GUI;..\..\Libraries\User;..\..\Libraries\User_lib) DEBUG OBJECTEXTEND PRINT(.\Out_File\user_pid.lst)
                    - TABS(2) OBJECT(.\Out_File\user_pid.obj)

line level    source

   1          /*
   2          ------------------------------------------------------------
   3          官方网址：www.alongxii.xyz
   4          软件作者：Along
   5          QQ：1259306443
   6          邮箱：alongxii@outlook.com/1259306443@qq.com
   7          硬件作者：LI JIAN
   8          QQ：1557731308
   9          邮箱：jian19990317@qq.com
  10          源码底层采用逐飞科技开源库，在此基础上进行二次开发，代码全部开源至Github。
  11          商用前请联系作者Along进行相关咨询。
  12          ------------------------------------------------------------
  13          2021.7.2
  14          源码最后更新至V1.3.1版本
  15          功能包括：
  16          1.参数整定
  17          2.屏幕设置
  18          3.基础设置
  19          4.休眠时间设置
  20          5.温度阈值设置
  21          6.阻焊校准设置
  22          7.电源协议管理设置
  23          8.菜单UI设置
  24          具体设置使用方法在www.alongxii.xyz中有详细介绍。
  25          后续网址可能会更替为www.alongxii.com/www.alongxii.cn。
  26          ------------------------------------------------------------
  27          源码相关文件介绍：
  28          *user_gpio.h:引脚映射的头文件，可根据自己电路的布局修改引脚映射，除ADC接口需采用P1口以外，
  29          IIC、SPI接口均采用模拟接口，理论上可任意映射。
  30          main.c:此文件中主要提供软件初始化配置，及菜单等功能程序调用。
  31          user_menu.c:此文件用于菜单UI使用。
  32          user_adc.c:此文件用于ADC信号采集，电压值转换、温度转换。
  33          烙铁温度读取采用分段一次函数，依次对每个100度分段的adc值进行运算得到对应温度值。
  34          电压采集使用电阻分压。
  35          user_pid.c:此文件采用位置式PID进行控温，如有更先进控制方案，可在此文件中修改控制函数。
  36          user_button.c:此文件提供相关按键中断函数与操作逻辑函数，功能调用方式。
  37          ------------------------------------------------------------
  38          */
  39          #include "headfile.h"
  40          #include "user_pid.h"
  41          
  42          uint8 pwm_flag = 0;
  43          float pwm_duty_out = 0;
  44          
  45          //定义初始值
  46          
  47          float   Integration = 0;  //积分量
  48          float   Ek[3];//定义误差值
  49          float   Temp_Set;         //设定值
  50          float   Feedback = 0;     //反馈值
  51          float   Pwmduty_Out = 0;          //输出的pwm占空比
  52          
C51 COMPILER V9.59.0.0   USER_PID                                                          07/02/2021 21:25:48 PAGE 2   

  53          void ALL_PWM_init(void)
  54          {
  55   1          pwm_init(PWM_control, 400, 0);
  56   1          pwm_init(BEEP, 4000, 0);
  57   1      }
  58          
  59          
  60          float iron_temp_control(float set_temp,float get_temp)//
  61          {
  62   1          float pwm_out;//由于
  63   1          if(get_temp < set_temp*0.9)
  64   1          {
  65   2              pwm_out = 10000;
  66   2          }
  67   1          else
  68   1          {
  69   2              Ek[0] = set_temp - get_temp;
  70   2              Integration += Ek[0];
  71   2              if(Integration > 100) Integration = 100;//对积分值限幅
  72   2              if(Integration <=100) Integration = -100;
  73   2              pwm_out = 100*(kP*Ek[0] + (kI/10)*Integration + (kD/10)*(Ek[1] -Ek[0]));//位置式PID
  74   2      
  75   2              //pwm_out = kP*Ek[0] + kI*Ek[1] + kD*Ek[2];
  76   2              //(kP * Ek[0]) - (kI * Ek[1]) + (kD * Ek[2])
  77   2              Ek[2] = Ek[1];//上上次误差值
  78   2              Ek[1] = Ek[0];//将本次误差值赋值到上一次误差
  79   2          }
  80   1          if(pwm_out > 10000)
  81   1          {
  82   2              pwm_out = 10000.0;
  83   2          }
  84   1          else if(pwm_out < 0)
  85   1          {
  86   2              pwm_out = 0;
  87   2          }
  88   1          return pwm_out;
  89   1      }
  90          void pwm_out_get(void)
  91          {
  92   1          pwm_duty_out = iron_temp_control(Temp_Set,Iron_temp_now);
  93   1      
  94   1          if(pwm_flag == 1)
  95   1          {
  96   2              pwm_duty(PWM_control, (int)pwm_duty_out);
  97   2      
  98   2          }
  99   1          else if(pwm_flag == 0)
 100   1          {
 101   2              pwm_duty(PWM_control, 0);
 102   2      
 103   2          }
 104   1      
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    499    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     33      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   USER_PID                                                          07/02/2021 21:25:48 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
