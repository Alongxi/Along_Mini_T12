C51 COMPILER V9.59.0.0   ZF_ADC                                                            07/02/2021 21:25:46 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ZF_ADC
OBJECT MODULE PLACED IN .\Out_File\zf_adc.obj
COMPILER INVOKED BY: D:\APPDATA\Keil\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_adc.c LARGE OPTIMIZE(9,SPEED)
                    - BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\
                    -inc;..\USER\src;..\..\Libraries\GUI;..\..\Libraries\User;..\..\Libraries\User_lib) DEBUG OBJECTEXTEND PRINT(.\Out_File\z
                    -f_adc.lst) TABS(2) OBJECT(.\Out_File\zf_adc.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          adc
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK5.27
  15           * @Target core   STC8G8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          
  21          #include "zf_adc.h"
  22          #include "intrins.h"
  23          
  24          
  25          //--------------------------------------------------------------------------------------------------------
             ------------
  26          //  @brief      ADC初始化
  27          //  @param      adcn            选择ADC通道
  28          //  @param      speed         ADC时钟频率
  29          //  @return     void
  30          //  Sample usage:               adc_init(ADC_P10,ADC_SYSclk_DIV_2);//初始化P1.0为ADC功能,ADC时钟频率：SYSc
             -lk/2
  31          //--------------------------------------------------------------------------------------------------------
             ------------
  32          void adc_init(ADCN_enum adcn,ADC_SPEED_enum speed)
  33          {
  34   1        ADC_CONTR |= 1<<7;  //1 ：打开 ADC 电源
  35   1        
  36   1        if((adcn >> 3) == 1) //P0.0
  37   1        {
  38   2          //IO口需要设置为高阻输入
  39   2          P0M0 &= ~(1 << (adcn & 0x07));
  40   2          P0M1 |= (1 << (adcn & 0x07));
  41   2        }
  42   1        else if((adcn >> 3) == 0) //P1.0  
  43   1        {
  44   2          //IO口需要设置为高阻输入
  45   2          P1M0 &= ~(1 << (adcn & 0x07));
  46   2            P1M1 |= (1 << (adcn & 0x07));
  47   2        }
C51 COMPILER V9.59.0.0   ZF_ADC                                                            07/02/2021 21:25:46 PAGE 2   

  48   1      
  49   1        ADCCFG |= speed&0x0F; //ADC时钟频率SYSclk/2/speed&0x0F;
  50   1        
  51   1        
  52   1      //  ADCTIM |= 1<<7;
  53   1      //  ADCTIM |= 3<<5;
  54   1      //  ADCTIM |= 0x1f;
  55   1        ADCCFG |= 1<<5;   //转换结果右对齐。 ADC_RES 保存结果的高 2 位， ADC_RESL 保存结果的低 8 位。
  56   1      
  57   1      }
  58          
  59          
  60          
  61          //--------------------------------------------------------------------------------------------------------
             ------------
  62          //  @brief      ADC转换一次
  63          //  @param      adcn            选择ADC通道
  64          //  @param      resolution      分辨率
  65          //  @return     void
  66          //  Sample usage:               adc_convert(ADC_P10, ADC_10BIT);
  67          //--------------------------------------------------------------------------------------------------------
             ------------
  68          uint16 adc_once(ADCN_enum adcn,ADCRES_enum resolution)
  69          {
  70   1        uint16 adc_value;
  71   1        
  72   1        ADC_CONTR &= (0xF0);  //清除ADC_CHS[3:0] ： ADC 模拟通道选择位
  73   1        ADC_CONTR |= adcn;
  74   1        
  75   1        ADC_CONTR |= 0x40;  // 启动 AD 转换
  76   1        while (!(ADC_CONTR & 0x20));  // 查询 ADC 完成标志
  77   1        ADC_CONTR &= ~0x20;  // 清完成标志
  78   1        
  79   1        
  80   1        adc_value = ADC_RES;  //存储 ADC 的 10 位结果的高 2 位
  81   1        adc_value <<= 8;
  82   1        adc_value |= ADC_RESL;  //存储 ADC 的 10 位结果的低 8 位
  83   1        
  84   1      
  85   1        
  86   1        adc_value >>= resolution;//取多少位
  87   1        
  88   1      
  89   1        return adc_value;
  90   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    116    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
