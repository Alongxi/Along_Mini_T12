C51 COMPILER V9.59.0.0   ZF_PCA_PIT                                                        07/02/2021 21:25:47 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ZF_PCA_PIT
OBJECT MODULE PLACED IN .\Out_File\zf_pca_pit.obj
COMPILER INVOKED BY: D:\APPDATA\Keil\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_pca_pit.c LARGE OPTIMIZE(9,SP
                    -EED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\U
                    -SER\inc;..\USER\src;..\..\Libraries\GUI;..\..\Libraries\User;..\..\Libraries\User_lib) DEBUG OBJECTEXTEND PRINT(.\Out_Fi
                    -le\zf_pca_pit.lst) TABS(2) OBJECT(.\Out_File\zf_pca_pit.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          pit
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK5.27
  15           * @Target core   STC8G8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "zf_pca_pit.h"
  21          #include "board.h"
  22          
  23          
  24          
  25          uint16 ccp_value[3] = {0,0,0};
  26          uint16 pca_time_ms[3] = {0,0,0};
  27          
  28          
  29          //--------------------------------------------------------------------------------------------------------
             ------------
  30          //  @brief      内部使用用户无需关心
  31          //  @param      NULL              
  32          //  @return     void
  33          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
  34          //--------------------------------------------------------------------------------------------------------
             ------------
  35          void pca_init(PCAN_enum pca_n,PCAMODE_enum pca_mode)
  36          {
  37   1        //P_SW1 = 0x00; //ECI/P1.2, CCP0/P1.1, CCP1/P1.0, CCP2/P3.7
  38   1        //P_SW1 = 0x10; //ECI_2/P3.4, CCP0_2/P3.5, CCP1_2/P3.6, CCP2_2/P3.7
  39   1        //P_SW1 = 0x20; //ECI_3/P2.4, CCP0_3/P2.5, CCP1_3/P2.6, CCP2_3/P2.7
  40   1      
  41   1        CCON = 0;
  42   1        CMOD = 0x03<<1; //ECI 脚的外部输入时钟
  43   1        
  44   1        if(PCA_1 == pca_n)
  45   1        {
  46   2          switch(pca_mode)
  47   2          {
  48   3            case NONE:
C51 COMPILER V9.59.0.0   ZF_PCA_PIT                                                        07/02/2021 21:25:47 PAGE 2   

  49   3            {
  50   4              CCAPM0 = 0x00;
  51   4              break;
  52   4            }
  53   3            case PWM_MODE_N0_ISR:
  54   3            {
  55   4              CCAPM0 = 0x42;
  56   4              break;
  57   4            }
  58   3            case PWM_MODE_RISING_EDGE_ISR:
  59   3            {
  60   4              CCAPM0 = 0x63;
  61   4              break;
  62   4            }
  63   3            case PWM_MODE_FALLING_EDGE_ISR:
  64   3            {
  65   4              CCAPM0 = 0x53;
  66   4              break;
  67   4            }
  68   3            
  69   3            case PWM_MODE_BOTH_EDGE_ISR:
  70   3            {
  71   4              CCAPM0 = 0x73;
  72   4              break;
  73   4            }
  74   3            case RISING_EDGE_CAPTURE:
  75   3            {
  76   4              CCAPM0 = 0x20;
  77   4              break;
  78   4            }
  79   3            case FALLING_EDGE_CAPTURE:
  80   3            {
  81   4              CCAPM0 = 0x10;
  82   4              break;
  83   4            }
  84   3            case BOTH_EDGE_CAPTURE:
  85   3            {
  86   4              CCAPM0 = 0x30;
  87   4              break;
  88   4            }
  89   3            case SOFT_TIMER:
  90   3            {
  91   4              CCAPM0 = 0x49;
  92   4              CR = 1;
  93   4              break;
  94   4            }   
  95   3            case HIGH_SPEED_PULSE_OUTPUT:
  96   3            {
  97   4              CCAPM0 = 0x4C;
  98   4              break;
  99   4            }
 100   3          }
 101   2        }
 102   1      }
 103          
 104          //--------------------------------------------------------------------------------------------------------
             ------------
 105          //  @brief      内部使用用户无需关心
 106          //  @param      NULL              
 107          //  @return     void
 108          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 109          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.59.0.0   ZF_PCA_PIT                                                        07/02/2021 21:25:47 PAGE 3   

             ------------
 110          uint16 pca_get(PCAN_enum pca_n)
 111          {
 112   1        uint16 dat;
 113   1        if(PCA_1 == pca_n)
 114   1        {
 115   2          dat = (uint8)CCAP0H << 8;
 116   2          dat = ((uint8)CCAP0L) | dat;
 117   2        }
 118   1        
 119   1        return dat;
 120   1      }
 121          //--------------------------------------------------------------------------------------------------------
             ------------
 122          //  @brief      内部使用用户无需关心
 123          //  @param      NULL              
 124          //  @return     void
 125          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 126          //--------------------------------------------------------------------------------------------------------
             ------------
 127          void pca_clean(PCAN_enum pca_n)
 128          {
 129   1        if(PCA_1 == pca_n)
 130   1        {
 131   2          CH = 0;
 132   2          CL = 0;
 133   2        }
 134   1      }
 135          
 136          
 137          
 138          
 139          
 140          //--------------------------------------------------------------------------------------------------------
             ------------
 141          //  @brief      周期中断初始化
 142          //  @param      time        周期中断时间(1ms-45ms)
 143          //  @return     void
 144          //  Sample usage:     pca_init_interrupt_ms(PCA_0,1); 初始化1ms一次中断
 145          //--------------------------------------------------------------------------------------------------------
             ------------
 146          void pca_init_interrupt_ms(PCAN_enum pca_n,uint16 time_ms)
 147          {
 148   1        uint16 cr_count;
 149   1        CR = 0;       // 关闭 PCA 计时器
 150   1        cr_count = (CH<<8) | CL;
 151   1        if(PCA_0 == pca_n)
 152   1        {
 153   2          time_ms = (sys_clk / (12 * (1000 / time_ms)));
 154   2          pca_time_ms[0] = time_ms;
 155   2          CCAPM0 = 0x49;
 156   2          CCAP0L = CL + 1;
 157   2          CCAP0H = CH;
 158   2          ccp_value[0] = ccp_value[0] + pca_time_ms[0] + cr_count;
 159   2        }
 160   1        if(PCA_1 == pca_n)
 161   1        {
 162   2          time_ms = (sys_clk / (12 * (1000 / time_ms)));
 163   2          pca_time_ms[1] = time_ms;
 164   2          CCAPM1 = 0x49;
 165   2          CCAP0L = CL + 1;
 166   2          CCAP0H = CH;
C51 COMPILER V9.59.0.0   ZF_PCA_PIT                                                        07/02/2021 21:25:47 PAGE 4   

 167   2          ccp_value[1] = ccp_value[1] + pca_time_ms[1] + cr_count;
 168   2        }
 169   1      //  PCA_2已做延时
 170   1      //  if(PCA_2 == pca_n)  
 171   1      //  {
 172   1      //    time_ms = (sys_clk/(12*(1000/time_ms)));
 173   1      //    pca_time_ms[2] = time_ms;
 174   1      //    CCAPM2 = 0x49;
 175   1      //    CCAP2L = ccp_value[2];
 176   1      //    CCAP2H = ccp_value[2] >> 8;
 177   1      //    ccp_value[2] += pca_time_ms[2];
 178   1      //  }
 179   1        CR = 1;       // 启动 PCA 计时器
 180   1      }
 181          
 182          //--------------------------------------------------------------------------------------------------------
             ------------
 183          //  @brief      PCA重载计数器
 184          //  @param      pca_n       pca通道号
 185          //  @return     void
 186          //  Sample usage:         pca_init_interrupt_ms(PCA_0, 1); 初始化1ms一次中断
 187          //--------------------------------------------------------------------------------------------------------
             ------------
 188          void pca_reload_counter(PCAN_enum pca_n)
 189          {
 190   1        
 191   1        if(PCA_0 == pca_n)
 192   1        {
 193   2          //重载计数器
 194   2          CCAP0L = ccp_value[0];
 195   2          CCAP0H = ccp_value[0] >> 8;
 196   2          ccp_value[0] += pca_time_ms[0];
 197   2        }
 198   1      
 199   1        if(PCA_1 == pca_n)
 200   1        {
 201   2          //重载计数器
 202   2          CCAP1L = ccp_value[1];
 203   2          CCAP1H = ccp_value[1] >> 8;
 204   2          ccp_value[1] += pca_time_ms[1];
 205   2        }
 206   1        
 207   1        
 208   1        if(PCA_2 == pca_n)
 209   1        {
 210   2          //重载计数器
 211   2          CCAP2L = ccp_value[2];
 212   2          CCAP2H = ccp_value[2] >> 8;
 213   2          ccp_value[2] += pca_time_ms[2];
 214   2        }
 215   1      
 216   1      }
 217          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    417    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   ZF_PCA_PIT                                                        07/02/2021 21:25:47 PAGE 5   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
